{"version":3,"file":"ng-zorro-antd-graph.js","sources":["../../components/graph/interface.ts","../../components/graph/data-source/base-graph-source.ts","../../components/graph/data-source/graph-data-source.ts","../../components/graph/custom-graph-node.directive.ts","../../components/graph/graph-defs.component.ts","../../components/graph/graph-edge.directive.ts","../../components/graph/core/minimap.ts","../../components/graph/graph-minimap.component.ts","../../components/graph/graph-node.directive.ts","../../components/graph/graph-svg-container.component.ts","../../components/graph/utils.ts","../../components/graph/graph.component.ts","../../components/graph/graph.module.ts","../../components/graph/public-api.ts","../../components/graph/ng-zorro-antd-graph.ts"],"sourcesContent":["/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  HierarchyBaseEdgeInfo,\n  HierarchyBaseNodeInfo,\n  HierarchyGraphDef,\n  HierarchyGraphEdgeDef,\n  HierarchyGraphNodeDef,\n  HierarchyGraphNodeInfo,\n  HierarchyGraphOption\n} from '@nx-component/hierarchy-graph';\nimport { LayoutSetting } from '@nx-component/hierarchy-graph/dist/types';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nexport interface NzGraphDataDef extends HierarchyGraphDef {\n  nodes: NzGraphNodeDef[];\n  edges: NzGraphEdgeDef[];\n}\n\nexport interface NzGraphNodeDef extends HierarchyGraphNodeDef {\n  label?: string;\n}\n\nexport interface NzGraphEdgeDef extends HierarchyGraphEdgeDef {\n  label?: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface NzGraphOption extends HierarchyGraphOption {}\nexport declare type NzRankDirection = 'TB' | 'BT' | 'LR' | 'RL';\n\nexport interface NzGraphGroupNode extends HierarchyGraphNodeInfo {\n  nodes: Array<NzGraphNode | NzGraphGroupNode>;\n  edges: NzGraphEdge[];\n  [key: string]: NzSafeAny;\n}\n\nexport interface NzGraphNode extends HierarchyBaseNodeInfo {\n  id: NzSafeAny;\n  // TODO\n  name: NzSafeAny;\n  label?: string;\n  [key: string]: NzSafeAny;\n}\n\nexport interface NzGraphEdge extends HierarchyBaseEdgeInfo {\n  id: NzSafeAny;\n  v: NzSafeAny;\n  w: NzSafeAny;\n  label?: string;\n}\n\n// tslint:disable-next-line:no-empty-interface\nexport interface NzLayoutSetting extends LayoutSetting {}\n\nexport function nzTypeDefinition<T>(): (item: unknown) => T {\n  return item => item as T;\n}\n\n// tslint:disable:no-shadowed-variable\nexport type NzDeepPartial<T> = {\n  [P in keyof T]?: T[P] extends Array<infer U>\n    ? Array<NzDeepPartial<U>>\n    : T[P] extends ReadonlyArray<infer U>\n    ? ReadonlyArray<NzDeepPartial<U>>\n    : NzDeepPartial<T[P]>;\n};\n\nexport type NzGraphLayoutSetting = NzDeepPartial<NzLayoutSetting>;\nexport const NZ_GRAPH_LAYOUT_SETTING: NzLayoutSetting = {\n  animation: {\n    /** Default duration for graph animations in ms. */\n    duration: 250\n  },\n  graph: {\n    /** Graph parameter for metanode. */\n    meta: {\n      /**\n       * Dagre's nodesep param - number of pixels that\n       * separate nodes horizontally in the layout.\n       *\n       * See https://github.com/cpettitt/dagre/wiki#configuring-the-layout\n       */\n      nodeSep: 50,\n      /**\n       * Dagre's ranksep param - number of pixels\n       * between each rank in the layout.\n       *\n       * See https://github.com/cpettitt/dagre/wiki#configuring-the-layout\n       */\n      rankSep: 40,\n      /**\n       * Dagre's edgesep param - number of pixels that separate\n       * edges horizontally in the layout.\n       */\n      edgeSep: 5\n    },\n    /**\n     * Padding is used to correctly position the graph SVG inside of its parent\n     * element. The padding amounts are applied using an SVG transform of X and\n     * Y coordinates.\n     */\n    padding: { paddingTop: 10, paddingLeft: 0 }\n  },\n  subscene: {\n    meta: {\n      paddingTop: 20,\n      paddingBottom: 20,\n      paddingLeft: 20,\n      paddingRight: 20,\n      /**\n       * Used to leave room for the label on top of the highest node in\n       * the groupCore graph.\n       */\n      labelHeight: 20,\n      /** X-space between each extracted node and the groupCore graph. */\n      extractXOffset: 0,\n      /** Y-space between each extracted node. */\n      extractYOffset: 0\n    }\n  },\n  nodeSize: {\n    /** Size of meta nodes. */\n    meta: {\n      radius: 2,\n      width: 160,\n      maxLabelWidth: 0,\n      /** A scale for the node's height based on number of nodes inside */\n      // Hack - set this as an any type to avoid issues in exporting a type\n      // from an external module.\n      height: 100,\n      /** The radius of the circle denoting the expand button. */\n      expandButtonRadius: 3\n    },\n    /** Size of op nodes. */\n    op: {\n      width: 160,\n      height: 100,\n      radius: 1, // for making annotation touching ellipse\n      labelOffset: 10,\n      maxLabelWidth: 40\n    },\n    /** Size of bridge nodes. */\n    bridge: {\n      // NOTE: bridge nodes will normally be invisible, but they must\n      // take up some space so that the layout step leaves room for\n      // their edges.\n      width: 10,\n      height: 10,\n      radius: 2,\n      labelOffset: 0\n    }\n  },\n  shortcutSize: {\n    /** Size of shortcuts for op nodes */\n    op: { width: 10, height: 4 },\n    /** Size of shortcuts for meta nodes */\n    meta: { width: 12, height: 4, radius: 1 },\n    /** Size of shortcuts for series nodes */\n    series: {\n      width: 14,\n      height: 4\n    }\n  },\n  annotations: {\n    /** Maximum possible width of the bounding box for in annotations */\n    inboxWidth: 50,\n    /** Maximum possible width of the bounding box for out annotations */\n    outboxWidth: 50,\n    /** X-space between the shape and each annotation-node. */\n    xOffset: 10,\n    /** Y-space between each annotation-node. */\n    yOffset: 3,\n    /** X-space between each annotation-node and its label. */\n    labelOffset: 2,\n    /** Defines the max width for annotation label */\n    maxLabelWidth: 120\n  },\n  constant: { size: { width: 4, height: 4 } },\n  minimap: {\n    /** The maximum width/height the minimap can have. */\n    size: 150\n  }\n};\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { SelectionModel } from '@angular/cdk/collections';\n\nexport interface NzGraphBaseSource<T, K> {\n  /** The saved graph nodes data for `expandAll` action. */\n  dataSource: T;\n\n  /** The expansion model */\n  expansionModel: SelectionModel<K>;\n\n  /** Whether the data node is expanded or collapsed. Return true if it's expanded. */\n  isExpanded(dataNode: K): boolean;\n\n  /** Expand or collapse data node */\n  toggle(dataNode: K): void;\n\n  /** Expand one data node */\n  expand(dataNode: K): void;\n\n  /** Collapse one data node */\n  collapse(dataNode: K): void;\n\n  /** Expand all the dataNodes in the tree */\n  expandAll(): void;\n\n  /** Collapse all the dataNodes in the tree */\n  collapseAll(): void;\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { BehaviorSubject, merge, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NzGraphDataDef } from '../interface';\nimport { NzGraphBaseSource } from './base-graph-source';\n\nexport class NzGraphData implements NzGraphBaseSource<NzGraphDataDef, string> {\n  private _data = new BehaviorSubject<NzGraphDataDef>({} as NzGraphDataDef);\n  dataSource!: NzGraphDataDef;\n  /** A selection model with multi-selection to track expansion status. */\n  expansionModel: SelectionModel<string> = new SelectionModel<string>(true);\n\n  /** Toggles one single data node's expanded/collapsed state. */\n  toggle(nodeName: string): void {\n    this.expansionModel.toggle(nodeName);\n  }\n\n  /** Expands one single data node. */\n  expand(nodeName: string): void {\n    this.expansionModel.select(nodeName);\n  }\n\n  /** Collapses one single data node. */\n  collapse(nodeName: string): void {\n    this.expansionModel.deselect(nodeName);\n  }\n\n  /** Whether a given data node is expanded or not. Returns true if the data node is expanded. */\n  isExpanded(nodeName: string): boolean {\n    return this.expansionModel.isSelected(nodeName);\n  }\n\n  /** Collapse all dataNodes in the tree. */\n  collapseAll(): void {\n    this.expansionModel.clear();\n  }\n\n  expandAll(): void {\n    this.expansionModel.select(...Object.keys(this._data.value.compound || {}));\n  }\n\n  setData(data: NzGraphDataDef): void {\n    this.expansionModel?.clear();\n    this.dataSource = data;\n    this._data.next(data);\n  }\n\n  constructor(source?: NzGraphDataDef) {\n    if (source) {\n      this.expansionModel?.clear();\n      this.dataSource = source;\n      this._data.next(source);\n    }\n  }\n\n  connect(): Observable<NzGraphDataDef> {\n    const changes = [this._data, this.expansionModel.changed];\n    return merge(...changes).pipe(map(() => this._data.value));\n  }\n\n  disconnect(): void {\n    // do nothing for now\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive } from '@angular/core';\n\n@Directive({\n  selector: '[nzGraphNode]',\n  exportAs: 'nzGraphNode'\n})\nexport class NzCustomGraphNodeDirective {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'svg:defs[nz-graph-defs]',\n  template: `\n    <svg:marker\n      class=\"nz-graph-edge-marker\"\n      id=\"edge-end-arrow\"\n      viewBox=\"1 0 20 20\"\n      refX=\"9\"\n      refY=\"3.5\"\n      markerWidth=\"10\"\n      markerHeight=\"10\"\n      orient=\"auto\"\n    >\n      <svg:polygon points=\"0 0, 10 3.5, 0 7\"></svg:polygon>\n    </svg:marker>\n  `\n})\nexport class NzGraphDefsComponent {\n  constructor() {}\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Directive, ElementRef, Input, NgZone, OnChanges, OnInit, SimpleChanges } from '@angular/core';\nimport { curveBasis, line } from 'd3-shape';\nimport { take } from 'rxjs/operators';\nimport { NzGraphEdge } from './interface';\n\n@Directive({\n  selector: 'svg:path[nz-graph-edge]',\n  host: {\n    '[class.nz-graph-edge-line]': 'true',\n    '[id]': 'id'\n  }\n})\nexport class NzGraphEdgeDirective implements OnInit, OnChanges {\n  @Input() edge!: NzGraphEdge;\n\n  public get id(): string {\n    return this.edge?.id || `${this.edge.v}--${this.edge.w}`;\n  }\n\n  private readonly el!: SVGPathElement;\n  private readonly line = line<{ x: number; y: number }>()\n    .x(d => d.x)\n    .y(d => d.y)\n    .curve(curveBasis);\n\n  constructor(private elementRef: ElementRef<SVGPathElement>, private ngZone: NgZone) {\n    this.el = this.elementRef.nativeElement;\n  }\n\n  ngOnInit(): void {\n    this.setElementData();\n  }\n\n  setLine(): void {\n    const adjoiningPath = this.getAdjoiningEdgeElement();\n\n    if (adjoiningPath) {\n      const adjoiningPoint = adjoiningPath\n        .getPointAtLength(this.edge.inbound ? adjoiningPath.getTotalLength() : 0)\n        .matrixTransform(adjoiningPath.getCTM()!)\n        .matrixTransform(this.el.getCTM()!.inverse());\n      const points = [...this.edge.points];\n      const index = this.edge.inbound ? 0 : points.length - 1;\n      points[index].x = adjoiningPoint.x;\n      points[index].y = adjoiningPoint.y;\n      this.setPath(this.line(points)!);\n    } else {\n      this.setPath(this.line(this.edge.points)!);\n    }\n  }\n\n  setPath(d: string): void {\n    this.el.setAttribute('d', d);\n  }\n\n  setElementData(): void {\n    this.el.setAttribute('data-edge', `${this.edge.v}--${this.edge.w}`);\n    this.el.setAttribute('data-v', `${this.edge.v}`);\n    this.el.setAttribute('data-w', `${this.edge.w}`);\n  }\n\n  getAdjoiningEdgeElement(): SVGPathElement | null {\n    const adjoiningEdge = this.edge.adjoiningEdge;\n    if (adjoiningEdge) {\n      return document.querySelector(`path[data-edge=\"${adjoiningEdge.v}--${adjoiningEdge.w}\"]`) as SVGPathElement;\n    } else {\n      return null;\n    }\n  }\n\n  ngOnChanges(_changes: SimpleChanges): void {\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.setLine();\n    });\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { drag } from 'd3-drag';\nimport { pointer, select } from 'd3-selection';\nimport { ZoomBehavior, zoomIdentity, ZoomTransform } from 'd3-zoom';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\n\nconst FRAC_VIEWPOINT_AREA = 0.8;\n\nexport class Minimap {\n  private minimap: HTMLElement;\n  private canvas: HTMLCanvasElement;\n  private canvasRect: ClientRect;\n  private canvasBuffer: HTMLCanvasElement;\n  private minimapSvg: SVGSVGElement;\n  private viewpoint: SVGRectElement;\n  private scaleMinimap!: number;\n  private scaleMain!: number;\n  private maxWandH: number;\n  private translate!: [number, number];\n  private viewpointCoord: { x: number; y: number };\n  private minimapSize!: { width: number; height: number };\n  private labelPadding: number;\n\n  private svg: SVGSVGElement;\n  private zoomG: SVGGElement;\n  private mainZoom: ZoomBehavior<NzSafeAny, NzSafeAny>;\n\n  constructor(\n    svg: SVGSVGElement,\n    zoomG: SVGGElement,\n    mainZoom: ZoomBehavior<NzSafeAny, NzSafeAny>,\n    minimap: HTMLElement,\n    maxWandH: number,\n    labelPadding: number\n  ) {\n    this.svg = svg;\n    this.labelPadding = labelPadding;\n    this.zoomG = zoomG;\n    this.mainZoom = mainZoom;\n    this.maxWandH = maxWandH;\n    const minimapElement = select(minimap);\n    const minimapSvgElement = minimapElement.select('svg');\n    const viewpointElement = minimapSvgElement.select('rect');\n    this.canvas = minimapElement.select('canvas.viewport').node() as HTMLCanvasElement;\n    this.canvasRect = this.canvas.getBoundingClientRect();\n\n    const handleEvent = (event: NzSafeAny): void => {\n      const minimapOffset = this.minimapOffset();\n      const width = Number(viewpointElement.attr('width'));\n      const height = Number(viewpointElement.attr('height'));\n      const clickCoords = pointer(event, minimapSvgElement.node() as NzSafeAny);\n      this.viewpointCoord.x = clickCoords[0] - width / 2 - minimapOffset.x;\n      this.viewpointCoord.y = clickCoords[1] - height / 2 - minimapOffset.y;\n      this.updateViewpoint();\n    };\n    this.viewpointCoord = { x: 0, y: 0 };\n    const dragEvent = drag().subject(Object).on('drag', handleEvent);\n    viewpointElement.datum(this.viewpointCoord as NzSafeAny).call(dragEvent as NzSafeAny);\n\n    // Make the minimap clickable.\n    minimapSvgElement.on('click', event => {\n      if ((event as Event).defaultPrevented) {\n        // This click was part of a drag event, so suppress it.\n        return;\n      }\n      handleEvent(event);\n    });\n    this.viewpoint = viewpointElement.node() as SVGRectElement;\n    this.minimapSvg = minimapSvgElement.node() as SVGSVGElement;\n    this.minimap = minimap;\n    this.canvasBuffer = minimapElement.select('canvas.buffer').node() as HTMLCanvasElement;\n    this.update();\n  }\n\n  private minimapOffset(): { x: number; y: number } {\n    return {\n      x: (this.canvasRect.width - this.minimapSize.width) / 2,\n      y: (this.canvasRect.height - this.minimapSize.height) / 2\n    };\n  }\n\n  private updateViewpoint(): void {\n    // Update the coordinates of the viewpoint rectangle.\n    select(this.viewpoint).attr('x', this.viewpointCoord.x).attr('y', this.viewpointCoord.y);\n    // Update the translation vector of the main svg to reflect the\n    // new viewpoint.\n    const mainX = (-this.viewpointCoord.x * this.scaleMain) / this.scaleMinimap;\n    const mainY = (-this.viewpointCoord.y * this.scaleMain) / this.scaleMinimap;\n    select(this.svg).call(this.mainZoom.transform, zoomIdentity.translate(mainX, mainY).scale(this.scaleMain));\n  }\n\n  update(): void {\n    let sceneSize = null;\n    try {\n      // Get the size of the entire scene.\n      sceneSize = this.zoomG.getBBox();\n      if (sceneSize.width === 0) {\n        // There is no scene anymore. We have been detached from the dom.\n        return;\n      }\n    } catch (e) {\n      // Firefox produced NS_ERROR_FAILURE if we have been\n      // detached from the dom.\n      return;\n    }\n\n    const svgSelection = select(this.svg);\n    // Read all the style rules in the document and embed them into the svg.\n    // The svg needs to be self contained, i.e. all the style rules need to be\n    // embedded so the canvas output matches the origin.\n    let stylesText = '';\n\n    for (const k of new Array(document.styleSheets.length).keys()) {\n      try {\n        const cssRules = (document.styleSheets[k] as NzSafeAny).cssRules || (document.styleSheets[k] as NzSafeAny).rules;\n        if (cssRules == null) {\n          continue;\n        }\n        for (const i of new Array(cssRules.length).keys()) {\n          // Remove tf-* selectors from the styles.\n          stylesText += cssRules[i].cssText.replace(/ ?tf-[\\w-]+ ?/g, '') + '\\n';\n        }\n      } catch (e) {\n        if (e.name !== 'SecurityError') {\n          throw e;\n        }\n      }\n    }\n\n    // Temporarily add the css rules to the main svg.\n    const svgStyle = svgSelection.append('style');\n    svgStyle.text(stylesText);\n\n    // Temporarily remove the zoom/pan transform from the main svg since we\n    // want the minimap to show a zoomed-out and centered view.\n    const zoomGSelection = select(this.zoomG);\n    const zoomTransform = zoomGSelection.attr('transform');\n    zoomGSelection.attr('transform', null);\n\n    // Since we add padding, account for that here.\n    sceneSize.height += this.labelPadding * 2;\n    sceneSize.width += this.labelPadding * 2;\n\n    // Temporarily assign an explicit width/height to the main svg, since\n    // it doesn't have one (uses flex-box), but we need it for the canvas\n    // to work.\n    svgSelection.attr('width', sceneSize.width).attr('height', sceneSize.height);\n\n    // Since the content inside the svg changed (e.g. a node was expanded),\n    // the aspect ratio have also changed. Thus, we need to update the scale\n    // factor of the minimap. The scale factor is determined such that both\n    // the width and height of the minimap are <= maximum specified w/h.\n    this.scaleMinimap = this.maxWandH / Math.max(sceneSize.width, sceneSize.height);\n    this.minimapSize = {\n      width: sceneSize.width * this.scaleMinimap,\n      height: sceneSize.height * this.scaleMinimap\n    };\n\n    const minimapOffset = this.minimapOffset();\n\n    // Update the size of the minimap's svg, the buffer canvas and the\n    // viewpoint rect.\n    select(this.minimapSvg).attr(this.minimapSize as NzSafeAny);\n    select(this.canvasBuffer).attr(this.minimapSize as NzSafeAny);\n\n    if (this.translate != null && this.zoom != null) {\n      // Update the viewpoint rectangle shape since the aspect ratio of the\n      // map has changed.\n      requestAnimationFrame(() => this.zoom());\n    }\n\n    // Serialize the main svg to a string which will be used as the rendering\n    // content for the canvas.\n    const svgXml = new XMLSerializer().serializeToString(this.svg);\n\n    // Now that the svg is serialized for rendering, remove the temporarily\n    // assigned styles, explicit width and height and bring back the pan/zoom\n    // transform.\n    svgStyle.remove();\n    svgSelection.attr('width', '100%').attr('height', '100%');\n\n    zoomGSelection.attr('transform', zoomTransform);\n\n    const image = new Image();\n    image.onload = () => {\n      // Draw the svg content onto the buffer canvas.\n      const context = this.canvasBuffer.getContext('2d');\n      context!.clearRect(0, 0, this.canvasBuffer.width, this.canvasBuffer.height);\n\n      context!.drawImage(image, minimapOffset.x, minimapOffset.y, this.minimapSize.width, this.minimapSize.height);\n      requestAnimationFrame(() => {\n        // Hide the old canvas and show the new buffer canvas.\n        select(this.canvasBuffer).style('display', 'block');\n        select(this.canvas).style('display', 'none');\n        // Swap the two canvases.\n        [this.canvas, this.canvasBuffer] = [this.canvasBuffer, this.canvas];\n      });\n    };\n    image.src = 'data:image/svg+xml;charset=utf-8,' + encodeURIComponent(svgXml);\n  }\n\n  /**\n   * Handles changes in zooming/panning. Should be called from the main svg\n   * to notify that a zoom/pan was performed and this minimap will update it's\n   * viewpoint rectangle.\n   * @param transform\n   */\n  zoom(transform?: ZoomTransform): void {\n    if (this.scaleMinimap == null) {\n      // Scene is not ready yet.\n      return;\n    }\n    // Update the new translate and scale params, only if specified.\n    if (transform) {\n      this.translate = [transform.x, transform.y];\n      this.scaleMain = transform.k;\n    }\n\n    // Update the location of the viewpoint rectangle.\n    const svgRect = this.svg.getBoundingClientRect();\n    const minimapOffset = this.minimapOffset();\n    const viewpointSelection = select(this.viewpoint);\n    this.viewpointCoord.x = (-this.translate[0] * this.scaleMinimap) / this.scaleMain;\n    this.viewpointCoord.y = (-this.translate[1] * this.scaleMinimap) / this.scaleMain;\n    const viewpointWidth = (svgRect.width * this.scaleMinimap) / this.scaleMain;\n    const viewpointHeight = (svgRect.height * this.scaleMinimap) / this.scaleMain;\n    viewpointSelection\n      .attr('x', this.viewpointCoord.x + minimapOffset.x)\n      .attr('y', this.viewpointCoord.y + minimapOffset.y)\n      .attr('width', viewpointWidth)\n      .attr('height', viewpointHeight);\n    // Show/hide the minimap depending on the viewpoint area as fraction of the\n    // whole minimap.\n    const mapWidth = this.minimapSize.width;\n    const mapHeight = this.minimapSize.height;\n    const x = this.viewpointCoord.x;\n    const y = this.viewpointCoord.y;\n    const w = Math.min(Math.max(0, x + viewpointWidth), mapWidth) - Math.min(Math.max(0, x), mapWidth);\n    const h = Math.min(Math.max(0, y + viewpointHeight), mapHeight) - Math.min(Math.max(0, y), mapHeight);\n    const fracIntersect = (w * h) / (mapWidth * mapHeight);\n    if (fracIntersect < FRAC_VIEWPOINT_AREA) {\n      this.minimap.classList.remove('hidden');\n    } else {\n      this.minimap.classList.add('hidden');\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { Component, ElementRef, OnInit } from '@angular/core';\nimport { ZoomBehavior, ZoomTransform } from 'd3-zoom';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { Minimap } from './core/minimap';\nimport { NZ_GRAPH_LAYOUT_SETTING } from './interface';\n\n@Component({\n  selector: 'nz-graph-minimap',\n  template: `\n    <svg>\n      <defs>\n        <filter id=\"minimapDropShadow\" x=\"-20%\" y=\"-20%\" width=\"150%\" height=\"150%\">\n          <feOffset result=\"offOut\" in=\"SourceGraphic\" dx=\"1\" dy=\"1\"></feOffset>\n          <feColorMatrix\n            result=\"matrixOut\"\n            in=\"offOut\"\n            type=\"matrix\"\n            values=\"0.1 0 0 0 0 0 0.1 0 0 0 0 0 0.1 0 0 0 0 0 0.5 0\"\n          ></feColorMatrix>\n          <feGaussianBlur result=\"blurOut\" in=\"matrixOut\" stdDeviation=\"2\"></feGaussianBlur>\n          <feBlend in=\"SourceGraphic\" in2=\"blurOut\" mode=\"normal\"></feBlend>\n        </filter>\n      </defs>\n      <rect></rect>\n    </svg>\n    <canvas class=\"viewport\"></canvas>\n    <!-- Additional canvas to use as buffer to avoid flickering between updates -->\n    <canvas class=\"buffer\"></canvas>\n  `,\n  host: {\n    '[class.nz-graph-minimap]': 'true'\n  }\n})\nexport class NzGraphMinimapComponent implements OnInit {\n  minimap?: Minimap;\n  constructor(private elementRef: ElementRef<HTMLElement>) {}\n\n  ngOnInit(): void {}\n\n  init(svgEle: SVGSVGElement, zoomEle: SVGGElement, zoomBehavior: ZoomBehavior<NzSafeAny, NzSafeAny>): void {\n    this.minimap = new Minimap(\n      svgEle,\n      zoomEle,\n      zoomBehavior,\n      this.elementRef.nativeElement,\n      NZ_GRAPH_LAYOUT_SETTING.minimap.size,\n      NZ_GRAPH_LAYOUT_SETTING.subscene.meta.labelHeight\n    );\n  }\n\n  zoom(transform: ZoomTransform): void {\n    if (this.minimap) {\n      this.minimap.zoom(transform);\n    }\n  }\n\n  update(): void {\n    if (this.minimap) {\n      this.minimap.update();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { animate, AnimationBuilder, AnimationFactory, AnimationPlayer, group, query, style } from '@angular/animations';\nimport { AfterViewInit, Directive, ElementRef, EventEmitter, Input, Output, Renderer2 } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { NzGraphGroupNode, NzGraphNode } from './interface';\n\ninterface Info {\n  x: number;\n  y: number;\n  width: number;\n  height: number;\n}\n\n@Directive({\n  selector: 'svg:g[nz-graph-node]',\n  host: {\n    '[id]': 'node.id || node.name',\n    '[class.nz-graph-node-expanded]': 'node.expanded',\n    '[class.nz-graph-group-node]': 'node.type===0',\n    '[class.nz-graph-base-node]': 'node.type===1',\n    '(click)': 'onTriggerClick($event)'\n  }\n})\nexport class NzGraphNodeDirective implements AfterViewInit {\n  @Input() node!: NzGraphNode | NzGraphGroupNode;\n  @Output() readonly nodeClick: EventEmitter<NzGraphNode | NzGraphGroupNode> = new EventEmitter();\n\n  onTriggerClick(event: MouseEvent): void {\n    event.preventDefault();\n    this.nodeClick.emit(this.node);\n  }\n\n  animationInfo: Info | null = null;\n\n  private animationPlayer: AnimationPlayer | null = null;\n\n  constructor(private el: ElementRef, private builder: AnimationBuilder, private renderer2: Renderer2) {}\n\n  makeAnimation(isFirstChange: boolean = false): Observable<void> {\n    if (this.animationPlayer) {\n      this.animationPlayer.destroy();\n    }\n    let animationFactory: AnimationFactory;\n    const cur = this.getAnimationInfo();\n    const pre = { ...this.animationInfo } as Info;\n\n    if (isFirstChange) {\n      animationFactory = this.builder.build([\n        style({ transform: `translate(${cur.x}px, ${cur.y}px)` }),\n        query('.nz-graph-node-rect', [\n          style({\n            width: `${cur.width}px`,\n            height: `${cur.height}px`\n          })\n        ])\n      ]);\n    } else {\n      animationFactory = this.builder.build([\n        style({ transform: `translate(${pre!.x}px, ${pre!.y}px)` }),\n        query('.nz-graph-node-rect', [\n          style({\n            width: `${pre!.width}px`,\n            height: `${pre!.height}px`\n          })\n        ]),\n        group([\n          query('.nz-graph-node-rect', [\n            animate(\n              '150ms ease-out',\n              style({\n                width: `${cur.width}px`,\n                height: `${cur.height}px`\n              })\n            )\n          ]),\n          animate('150ms ease-out', style({ transform: `translate(${cur.x}px, ${cur.y}px)` }))\n        ])\n      ]);\n    }\n    const done$ = new Subject<void>();\n    this.animationInfo = cur;\n    this.animationPlayer = animationFactory.create(this.el.nativeElement);\n    this.animationPlayer.play();\n    this.animationPlayer.onDone(() => {\n      // Need this for canvas for now.\n      this.renderer2.setAttribute(this.el.nativeElement, 'transform', `translate(${cur.x}, ${cur.y})`);\n      done$.next();\n      done$.complete();\n    });\n    return done$.asObservable();\n  }\n\n  getAnimationInfo(): Info {\n    const { x, y } = this.nodeTransform();\n    return {\n      width: this.node.width,\n      height: this.node.height,\n      x,\n      y\n    };\n  }\n\n  nodeTransform(): { x: number; y: number } {\n    const x = this.computeCXPositionOfNodeShape() - this.node.width / 2;\n    const y = this.node.y - this.node.height / 2;\n    return { x, y };\n  }\n\n  computeCXPositionOfNodeShape(): number {\n    if ((this.node as NzGraphGroupNode).expanded) {\n      return this.node.x;\n    }\n    return this.node.x - this.node.width / 2 + this.node.coreBox.width / 2;\n  }\n\n  ngAfterViewInit(): void {\n    this.makeAnimation(true);\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { select, Selection } from 'd3-selection';\n// Need to import for select\n// @ts-ignore\nimport { interrupt, transition } from 'd3-transition';\nimport { zoom, ZoomBehavior, zoomIdentity, zoomTransform } from 'd3-zoom';\nimport { NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { NZ_GRAPH_LAYOUT_SETTING } from './interface';\n\nexport interface NzZoomTransform {\n  x: number;\n  y: number;\n  k: number;\n}\n\nexport interface RelativePositionInfo {\n  topLeft: { x: number; y: number };\n  bottomRight: { x: number; y: number };\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-graph-svg-container',\n  exportAs: 'nzGraphSvgContainer',\n  template: `\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" #container width=\"100%\" height=\"100%\">\n      <rect width=\"100%\" height=\"100%\" fill=\"transparent\" class=\"nz-graph-background\"></rect>\n      <g #zoom [attr.transform]=\"transformStyle\" class=\"nz-graph-zoom\">\n        <ng-content></ng-content>\n      </g>\n    </svg>\n  `,\n  host: {\n    '[class.nz-graph-svg-container]': 'true'\n  }\n})\nexport class NzGraphSvgContainerComponent implements OnInit, OnDestroy {\n  @ViewChild('container', { static: true }) containerElement!: ElementRef<SVGSVGElement>;\n  @ViewChild('zoom', { static: true }) zoomElement!: ElementRef<SVGAElement>;\n  @Input() maxZoomLevel = 10;\n  @Input() minZoomLevel = 0.1;\n  @Input() zoom = 1;\n\n  @Output() readonly zoomEvent: EventEmitter<number> = new EventEmitter();\n  @Output() readonly transformEvent: EventEmitter<NzZoomTransform> = new EventEmitter();\n  transform: NzZoomTransform = { x: 0, y: 0, k: 1 };\n  transformStyle = '';\n  svgSelect!: Selection<NzSafeAny, NzSafeAny, NzSafeAny, NzSafeAny>;\n  zoomController!: ZoomBehavior<NzSafeAny, NzSafeAny>;\n\n  constructor(private cdr: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.bind();\n  }\n\n  ngOnDestroy(): void {\n    this.unbind();\n  }\n\n  bind(): void {\n    this.svgSelect = select(this.containerElement.nativeElement);\n    this.zoomController = zoom()\n      .scaleExtent([this.minZoomLevel, this.maxZoomLevel])\n      .on('zoom', ({ transform }: NzSafeAny) => {\n        const { x, y, k } = transform;\n        this.zoom = k;\n        this.zoomEvent.emit(k);\n        this.transform = transform;\n        this.transformEvent.emit(transform);\n        this.transformStyle = `translate(${x} ,${y})scale(${k})`;\n        this.cdr.detectChanges();\n      });\n    this.svgSelect.call(this.zoomController, zoomIdentity.translate(0, 0).scale(this.zoom));\n  }\n\n  unbind(): void {\n    this.svgSelect?.interrupt().selectAll('*').interrupt();\n    if (this.zoomController) {\n      this.zoomController.on('end', null).on('zoom', null);\n      this.transformEvent.complete();\n    }\n  }\n\n  /**\n   * Zoom to fit\n   */\n  fit(duration: number = 500, scale: number = 0.9): void {\n    const svgRect = this.containerElement.nativeElement.getBoundingClientRect();\n    let sceneSize = null;\n    try {\n      sceneSize = this.zoomElement.nativeElement.getBBox();\n      if (sceneSize.width === 0) {\n        // There is no scene anymore. We have been detached from the dom.\n        return;\n      }\n    } catch (e) {\n      // Firefox produced NS_ERROR_FAILURE if we have been\n      // detached from the dom.\n      return;\n    }\n    const fitScale = Math.min(svgRect.width / sceneSize.width, svgRect.height / sceneSize.height, 2) * scale;\n\n    const dx = (svgRect.width - sceneSize.width * fitScale) / 2;\n    const dy = (svgRect.height - sceneSize.height * fitScale) / 2;\n    const params = NZ_GRAPH_LAYOUT_SETTING.graph;\n\n    const transform = zoomIdentity.translate(dx + params.padding.paddingLeft, dy + params.padding.paddingTop).scale(fitScale);\n    this.svgSelect\n      .transition()\n      .duration(duration)\n      .call(this.zoomController.transform, transform)\n      .on('end.fitted', () => {\n        // Remove the listener for the zoomend event,\n        // so we don't get called at the end of regular zoom events,\n        // just those that fit the graph to screen.\n        this.zoomController.on('end.fitted', null);\n      });\n  }\n\n  // Move node to center\n  setNodeToCenter(node: SVGGElement): void {\n    // Make sure this node is under SVG container\n    if (!node || !this.containerElement.nativeElement.contains(node)) {\n      return;\n    }\n\n    const svgRect = this.containerElement.nativeElement.getBoundingClientRect();\n    const position = this.getRelativePositionInfo(node);\n    const svgTransform = zoomTransform(this.containerElement.nativeElement);\n\n    const centerX = (position.topLeft.x + position.bottomRight.x) / 2;\n    const centerY = (position.topLeft.y + position.bottomRight.y) / 2;\n    const dx = svgRect.left + svgRect.width / 2 - centerX;\n    const dy = svgRect.top + svgRect.height / 2 - centerY;\n\n    select(this.containerElement.nativeElement)\n      .transition()\n      .duration(250)\n      .call(this.zoomController.translateBy, dx / svgTransform.k, dy / svgTransform.k);\n  }\n\n  private getRelativePositionInfo(node: SVGGElement): RelativePositionInfo {\n    const nodeBox = node.getBBox();\n    const nodeCtm = node.getScreenCTM();\n    let pointTL = this.containerElement.nativeElement.createSVGPoint();\n    let pointBR = this.containerElement.nativeElement.createSVGPoint();\n\n    pointTL.x = nodeBox.x;\n    pointTL.y = nodeBox.y;\n    pointBR.x = nodeBox.x + nodeBox.width;\n    pointBR.y = nodeBox.y + nodeBox.height;\n    pointTL = pointTL.matrixTransform(nodeCtm!);\n    pointBR = pointBR.matrixTransform(nodeCtm!);\n    return {\n      topLeft: pointTL,\n      bottomRight: pointBR\n    };\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { NzGraphEdge, NzGraphGroupNode, NzGraphNode } from './interface';\n\nexport function flattenNodes(renderInfo: NzGraphGroupNode): Array<NzGraphGroupNode | NzGraphNode> {\n  const nodes: Array<NzGraphNode | NzGraphGroupNode> = [];\n  let edges: NzGraphEdge[] = [];\n  const dig = (node: NzGraphGroupNode | NzGraphNode): void => {\n    nodes.push(node);\n    if (node.type === 0) {\n      edges = edges.concat(node.edges);\n      (node as NzGraphGroupNode).nodes.forEach(n => dig(n));\n    }\n  };\n  dig(renderInfo);\n  return [...nodes];\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport {\n  AfterContentChecked,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  QueryList,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewChildren,\n  ViewEncapsulation\n} from '@angular/core';\nimport { buildGraph } from '@nx-component/hierarchy-graph';\nimport { ZoomTransform } from 'd3-zoom';\nimport { BooleanInput, NzSafeAny } from 'ng-zorro-antd/core/types';\nimport { InputBoolean } from 'ng-zorro-antd/core/util';\nimport { forkJoin, Observable, Subject, Subscription } from 'rxjs';\nimport { finalize, take, takeUntil, tap } from 'rxjs/operators';\nimport { NzCustomGraphNodeDirective } from './custom-graph-node.directive';\nimport { NzGraphData } from './data-source/graph-data-source';\nimport { NzGraphMinimapComponent } from './graph-minimap.component';\nimport { NzGraphNodeDirective } from './graph-node.directive';\nimport { NzGraphSvgContainerComponent, NzZoomTransform } from './graph-svg-container.component';\nimport {\n  NzGraphDataDef,\n  NzGraphEdge,\n  NzGraphEdgeDef,\n  NzGraphGroupNode,\n  NzGraphLayoutSetting,\n  NzGraphNode,\n  NzGraphNodeDef,\n  NzGraphOption,\n  NzLayoutSetting,\n  NzRankDirection,\n  nzTypeDefinition,\n  NZ_GRAPH_LAYOUT_SETTING\n} from './interface';\nimport { flattenNodes } from './utils';\n\n/** Checks whether an object is a data source. */\nexport function isDataSource(value: NzSafeAny): value is NzGraphData {\n  // Check if the value is a DataSource by observing if it has a connect function. Cannot\n  // be checked as an `instanceof DataSource` since people could create their own sources\n  // that match the interface, but don't extend DataSource.\n  return value && typeof value.connect === 'function';\n}\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'nz-graph',\n  exportAs: 'nzGraph',\n  template: `\n    <ng-content></ng-content>\n    <nz-graph-svg-container (transformEvent)=\"triggerTransform($event)\">\n      <svg:defs nz-graph-defs></svg:defs>\n      <ng-container [ngTemplateOutlet]=\"groupTemplate\" [ngTemplateOutletContext]=\"{ renderInfo: renderInfo, type: 'root' }\"></ng-container>\n    </nz-graph-svg-container>\n\n    <nz-graph-minimap *ngIf=\"nzShowMinimap\"></nz-graph-minimap>\n\n    <ng-template #groupTemplate let-renderInfo=\"renderInfo\" let-type=\"type\">\n      <svg:g [attr.transform]=\"type === 'sub' ? subGraphTransform(renderInfo) : null\">\n        <svg:g class=\"core\" [attr.transform]=\"coreTransform(renderInfo)\">\n          <svg:g class=\"nz-graph-edges\">\n            <svg:g class=\"nz-graph-edge\" *ngFor=\"let edge of renderInfo.edges; let index = index; trackBy: edgeTrackByFun\">\n              <svg:path\n                class=\"nz-graph-edge-line\"\n                nz-graph-edge\n                [attr.marker-end]=\"nzShowArrow ? 'url(#edge-end-arrow)' : null\"\n                [edge]=\"edge\"\n              ></svg:path>\n              <svg:text class=\"nz-graph-edge-text\" text-anchor=\"middle\" dy=\"20\" *ngIf=\"edge.label\">\n                <textPath [attr.href]=\"'#' + edge.v + '--' + edge.w\" startOffset=\"50%\">{{ edge.label }}</textPath>\n              </svg:text>\n            </svg:g>\n          </svg:g>\n\n          <svg:g class=\"nz-graph-nodes\">\n            <svg:g\n              class=\"nz-graph-node\"\n              [class.nz-graph-custom-node]=\"!!customGraphNodeTemplate\"\n              [style.display]=\"node.type === 2 ? 'none' : null\"\n              *ngFor=\"let node of typedNodes(renderInfo.nodes); trackBy: nodeTrackByFun\"\n            >\n              <svg:g nz-graph-node [node]=\"node\" (nodeClick)=\"clickNode($event)\">\n                <foreignObject class=\"nz-graph-node-rect\" x=\"0\" y=\"0\" [attr.width]=\"node.width\" [attr.height]=\"node.height\">\n                  <xhtml:div class=\"nz-graph-node-wrapper\">\n                    <ng-container\n                      *ngIf=\"customGraphNodeTemplate\"\n                      [ngTemplateOutlet]=\"customGraphNodeTemplate\"\n                      [ngTemplateOutletContext]=\"{ $implicit: node }\"\n                    ></ng-container>\n                    <div class=\"node-content\" *ngIf=\"!customGraphNodeTemplate\">\n                      <div class=\"title\">\n                        {{ node.name }}\n                        <i\n                          class=\"action-icon\"\n                          *ngIf=\"node.type === 0\"\n                          nz-icon\n                          [nzType]=\"node.expanded ? 'minus' : 'plus'\"\n                          nzTheme=\"outline\"\n                          (click)=\"toggleNode(node.name, node.expanded)\"\n                        ></i>\n                      </div>\n                      <div class=\"label\" *ngIf=\"!node.expanded\">{{ node.label }}</div>\n                    </div>\n                  </xhtml:div>\n                </foreignObject>\n              </svg:g>\n\n              <ng-container\n                *ngIf=\"node.expanded\"\n                [ngTemplateOutlet]=\"groupTemplate\"\n                [ngTemplateOutletContext]=\"{ renderInfo: node, type: 'sub' }\"\n              ></ng-container>\n            </svg:g>\n          </svg:g>\n        </svg:g>\n      </svg:g>\n    </ng-template>\n  `,\n  host: {\n    '[class.nz-graph]': 'true',\n    '[class.nz-graph-auto-fit]': 'nzAutoSize'\n  }\n})\nexport class NzGraphComponent implements OnInit, OnChanges, AfterViewInit, AfterContentChecked, OnDestroy {\n  static ngAcceptInputType_nzShowMinimap: BooleanInput;\n  static ngAcceptInputType_nzAutoSize: BooleanInput;\n  static ngAcceptInputType_nzShowArrow: BooleanInput;\n\n  @ViewChildren(NzGraphNodeDirective) graphNodes!: QueryList<NzGraphNodeDirective>;\n  @ViewChild(NzGraphSvgContainerComponent) svgContainerComponent!: NzGraphSvgContainerComponent;\n  @ViewChild(NzGraphMinimapComponent) minimap: NzGraphMinimapComponent | undefined;\n\n  @ContentChild(NzCustomGraphNodeDirective, { static: true, read: TemplateRef }) customGraphNodeTemplate?: TemplateRef<{\n    $implicit: NzGraphNode | NzGraphGroupNode;\n  }>;\n  /**\n   * Provides a stream containing the latest data array to render.\n   * Data source can be an observable of NzGraphData, or a NzGraphData to render.\n   */\n  @Input() nzGraphData!: NzGraphData;\n  @Input() nzRankDirection: NzRankDirection = 'LR';\n  @Input() nzGraphLayoutSettings?: NzGraphLayoutSetting;\n  @Input() @InputBoolean() nzShowMinimap = false;\n  @Input() @InputBoolean() nzShowArrow = false;\n\n  @Input() nzZoom = 1;\n  @Input() @InputBoolean() nzAutoSize = false;\n\n  @Output() readonly nzGraphInitialized = new EventEmitter<void>();\n  @Output() readonly nzZoomInit = new EventEmitter<void>();\n  @Output() readonly nzTransformEvent = new EventEmitter<NzZoomTransform>();\n  @Output() readonly nzNodeClick: EventEmitter<NzGraphNode | NzGraphGroupNode> = new EventEmitter();\n\n  renderInfo: NzGraphGroupNode = { labelHeight: 0 } as NzGraphGroupNode;\n  mapOfNodeAttr: { [key: string]: NzGraphNodeDef } = {};\n  mapOfEdgeAttr: { [key: string]: NzGraphEdgeDef } = {};\n\n  public readonly typedNodes = nzTypeDefinition<Array<NzGraphNode | NzGraphGroupNode>>();\n  private dataSource?: NzGraphData;\n  private layoutSetting: NzLayoutSetting = NZ_GRAPH_LAYOUT_SETTING;\n  /** Data subscription */\n  private _dataSubscription?: Subscription | null;\n  private destroy$ = new Subject<void>();\n\n  nodeTrackByFun = (_: number, node: NzGraphNode | NzGraphGroupNode) => node.name;\n  edgeTrackByFun = (_: number, edge: NzGraphEdge) => `${edge.v}-${edge.w}`;\n\n  subGraphTransform = (node: NzGraphGroupNode) => {\n    const x = node.x - node.coreBox.width / 2.0;\n    const y = node.y - node.height / 2.0 + node.paddingTop / 2.0;\n    return `translate(${x}, ${y})`;\n  };\n\n  coreTransform = (node: NzGraphGroupNode) => {\n    return `translate(0, ${node.labelHeight})`;\n  };\n\n  constructor(private cdr: ChangeDetectorRef, private ngZone: NgZone, private elementRef: ElementRef) {}\n\n  ngOnInit(): void {\n    if (this.dataSource !== this.nzGraphData) {\n      this._switchDataSource(this.nzGraphData);\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    const { nzAutoFit, nzRankDirection, nzGraphData, nzGraphLayoutSettings } = changes;\n    if (nzGraphLayoutSettings) {\n      Object.assign(this.layoutSetting, this.nzGraphLayoutSettings || {});\n    }\n\n    if (nzGraphData) {\n      if (this.dataSource !== this.nzGraphData) {\n        this._switchDataSource(this.nzGraphData);\n      }\n    }\n\n    if ((nzAutoFit && !nzAutoFit.firstChange) || (nzRankDirection && !nzRankDirection.firstChange)) {\n      // Render graph\n      if (this.dataSource!.dataSource) {\n        this.renderGraph(this.dataSource!.dataSource, {\n          rankDirection: this.nzRankDirection,\n          expanded: this.dataSource!.expansionModel.selected || []\n        });\n      }\n    }\n\n    this.cdr.markForCheck();\n  }\n\n  ngAfterViewInit(): void {\n    this.autoFit();\n    this.drawMinimap(true);\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.dataSource && !this._dataSubscription) {\n      this.observeRenderChanges();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n\n    if (this.dataSource && typeof this.dataSource.disconnect === 'function') {\n      this.dataSource.disconnect();\n    }\n\n    if (this._dataSubscription) {\n      this._dataSubscription.unsubscribe();\n      this._dataSubscription = null;\n    }\n  }\n\n  /**\n   * Transform event\n   */\n  triggerTransform($event: { x: number; y: number; k: number }): void {\n    this.nzZoom = $event.k;\n    if (this.minimap) {\n      this.minimap.zoom($event as ZoomTransform);\n    }\n    this.nzTransformEvent.emit($event);\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * Emit event\n   */\n  clickNode(node: NzGraphNode | NzGraphGroupNode): void {\n    this.nzNodeClick.emit(node);\n  }\n\n  /**\n   * Move graph to center\n   */\n  autoFit(): void {\n    if (this.renderInfo) {\n      this.svgContainerComponent?.fit(0);\n    }\n  }\n\n  /**\n   * Refactor\n   */\n  toggleNode(node: string, expanded: boolean): void {\n    if (expanded) {\n      // collapse it\n      this.nzGraphData.collapse(node);\n    } else {\n      // expand it\n      this.nzGraphData.expand(node);\n    }\n  }\n\n  renderGraph(data: NzGraphDataDef, options: NzGraphOption): void {\n    const renderInfo = this.buildGraphInfo(data, options);\n    // TODO\n    // Need better performance\n    this.setRenderInfo(renderInfo, false);\n    if (this.nzAutoSize) {\n      this.resizeNodes(renderInfo, options);\n    }\n    this.cdr.detectChanges();\n  }\n\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the node outlet. Otherwise start listening for new data.\n   */\n  private _switchDataSource(dataSource: NzGraphData): void {\n    if (this.dataSource && typeof this.dataSource.disconnect === 'function') {\n      this.nzGraphData.disconnect();\n    }\n\n    if (this._dataSubscription) {\n      this._dataSubscription.unsubscribe();\n      this._dataSubscription = null;\n    }\n\n    this.dataSource = dataSource;\n    this.observeRenderChanges();\n  }\n\n  /** Set up a subscription for the data provided by the data source. */\n  private observeRenderChanges(): void {\n    let dataStream: Observable<NzGraphDataDef> | undefined;\n    let graphOptions: NzGraphOption = {\n      rankDirection: this.nzRankDirection\n    };\n    if (isDataSource(this.dataSource)) {\n      dataStream = this.dataSource.connect();\n    }\n\n    if (dataStream) {\n      this._dataSubscription = dataStream.pipe(takeUntil(this.destroy$)).subscribe(data => {\n        graphOptions = {\n          rankDirection: this.nzRankDirection,\n          expanded: this.nzGraphData.expansionModel.selected\n        };\n        this.renderGraph(data, graphOptions);\n        this.cdr.detectChanges();\n      });\n    } else {\n      throw Error(`A valid data source must be provided.`);\n    }\n  }\n\n  private setRenderInfo(renderInfo: NzGraphGroupNode, asPatch: boolean = true): void {\n    if (asPatch) {\n      this.assignRenderInfo(renderInfo);\n    } else {\n      this.renderInfo = renderInfo;\n    }\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this.makeNodesAnimation().subscribe();\n    });\n  }\n\n  private buildGraphInfo(data: NzGraphDataDef, options: NzGraphOption): NzGraphGroupNode {\n    this.parseInfo(data);\n    const renderInfo = buildGraph(data, options, this.layoutSetting) as NzGraphGroupNode;\n    const dig = (nodes: Array<NzGraphNode | NzGraphGroupNode>): void => {\n      nodes.forEach(node => {\n        if (node.type === 1 && this.mapOfNodeAttr.hasOwnProperty(node.name)) {\n          Object.assign(node, this.mapOfNodeAttr[node.name]);\n        } else if (node.type === 0) {\n          (node as NzGraphGroupNode).edges.forEach(edge => {\n            if (this.mapOfEdgeAttr.hasOwnProperty(`${edge.v}-${edge.w}`)) {\n              Object.assign(edge, this.mapOfEdgeAttr[`${edge.v}-${edge.w}`]);\n            }\n          });\n          dig(node.nodes);\n        }\n      });\n    };\n    dig(renderInfo.nodes);\n    // Assign data to edges of root graph\n    renderInfo.edges.forEach(edge => {\n      if (this.mapOfEdgeAttr.hasOwnProperty(`${edge.v}-${edge.w}`)) {\n        Object.assign(edge, this.mapOfEdgeAttr[`${edge.v}-${edge.w}`]);\n      }\n    });\n    return renderInfo;\n  }\n\n  private resizeNodes(renderInfo: NzGraphGroupNode, options: NzGraphOption): void {\n    this.ngZone.onStable\n      .asObservable()\n      .pipe(\n        take(1),\n        finalize(() => {\n          this.cdr.detectChanges();\n        })\n      )\n      .subscribe(() => {\n        const dataSource: NzGraphDataDef = this.dataSource!.dataSource!;\n        this.elementRef.nativeElement.querySelectorAll('[nz-graph-node]').forEach((nodeEle: HTMLElement) => {\n          const contentEle = nodeEle.querySelector('.nz-graph-node-wrapper');\n          if (contentEle) {\n            const height = contentEle.getBoundingClientRect().height;\n            const width = contentEle.getBoundingClientRect().width;\n            // Element id type is string\n            const targetNode = flattenNodes(renderInfo).find(n => `${n.name}` === nodeEle.id);\n            const nodeName = targetNode && targetNode.name;\n            const node = dataSource.nodes.find(n => n.id === nodeName);\n\n            if (node) {\n              node.height = height / this.nzZoom;\n              node.width = width / this.nzZoom;\n            }\n          }\n        });\n        const newRenderInfo = this.buildGraphInfo(dataSource, options);\n        this.setRenderInfo(newRenderInfo, false);\n      });\n  }\n\n  private assignRenderInfo(renderInfo: NzGraphGroupNode): void {\n    this.renderInfo.edges = renderInfo.edges;\n    this.renderInfo.nodes.forEach((node: NzGraphNode | NzGraphGroupNode, index: number) => {\n      Object.assign(node, renderInfo.nodes[index]);\n    });\n  }\n\n  private makeNodesAnimation(): Observable<void> {\n    return forkJoin(...this.graphNodes.map(node => node.makeAnimation())).pipe(\n      tap(() => {\n        this.drawMinimap();\n      }),\n      finalize(() => {\n        this.cdr.detectChanges();\n      })\n    );\n  }\n\n  private parseInfo(data: NzGraphDataDef): void {\n    data.nodes.forEach(n => {\n      this.mapOfNodeAttr[n.id] = n;\n    });\n    data.edges.forEach(e => {\n      this.mapOfEdgeAttr[`${e.v}-${e.w}`] = e;\n    });\n  }\n\n  private drawMinimap(forceRerender: boolean = false): void {\n    if (!this.minimap || !this.nzShowMinimap) {\n      return;\n    }\n    if (forceRerender) {\n      this.minimap?.init(\n        this.svgContainerComponent.containerElement.nativeElement,\n        this.svgContainerComponent.zoomElement.nativeElement,\n        this.svgContainerComponent.zoomController\n      );\n    } else {\n      this.minimap?.update();\n    }\n  }\n}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NzIconModule } from 'ng-zorro-antd/icon';\nimport { NzSpinModule } from 'ng-zorro-antd/spin';\nimport { NzCustomGraphNodeDirective } from './custom-graph-node.directive';\nimport { NzGraphDefsComponent } from './graph-defs.component';\nimport { NzGraphEdgeDirective } from './graph-edge.directive';\nimport { NzGraphMinimapComponent } from './graph-minimap.component';\nimport { NzGraphNodeDirective } from './graph-node.directive';\nimport { NzGraphSvgContainerComponent } from './graph-svg-container.component';\nimport { NzGraphComponent } from './graph.component';\n\nconst COMPONENTS = [\n  NzGraphComponent,\n  NzGraphSvgContainerComponent,\n  NzGraphEdgeDirective,\n  NzGraphNodeDirective,\n  NzGraphMinimapComponent,\n  NzGraphDefsComponent,\n  NzCustomGraphNodeDirective\n];\n\n@NgModule({\n  declarations: [...COMPONENTS],\n  imports: [CommonModule, NzIconModule, NzSpinModule],\n  exports: [...COMPONENTS]\n})\nexport class NzGraphModule {}\n","/**\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://github.com/NG-ZORRO/ng-zorro-antd/blob/master/LICENSE\n */\n\nexport * from './interface';\nexport * from './data-source/base-graph-source';\nexport * from './data-source/graph-data-source';\nexport * from './graph.module';\nexport * from './graph.component';\nexport * from './graph-svg-container.component';\nexport * from './graph-node.directive';\nexport * from './graph-edge.directive';\nexport * from './custom-graph-node.directive';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {NzGraphDefsComponent as ɵb} from './graph-defs.component';\nexport {NzGraphMinimapComponent as ɵa} from './graph-minimap.component';"],"names":[],"mappings":"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"}